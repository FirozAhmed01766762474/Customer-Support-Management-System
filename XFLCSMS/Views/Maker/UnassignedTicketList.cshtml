@model IEnumerable<XFLCSMS.Models.Issue.IssueTable>
@{
    Layout = "_MakerLayout";

    ViewData["Title"] = "Index";
    var P = ViewBag.pager;
    int i = 1;
    int start = 0;
    int end = 0;
    int current_page = 1;
    int page_size = 10;
    string searchString = null;
    if (P != null)
    {
        i = P.SerialStart;
        start = i;
        current_page = P.CurrentPage;
        page_size = P.PageSize;
        searchString = P.SearchString;

    }


    int[] rows_per_page = { 5, 10, 20, 50, 100 };
}


<!-- Main content -->
<section class="content">

    <div class="card-header">
        <div class="row">
            <div class="col-md-2">
                <div class="card-tools">
                    <div class="input-group">
                        <p class="mt-1 mb-1">Shows:  </p>
                        <select name="rowperpage" class="ml-1 mt-0 mb-0" id="rowsPerPageSelect">
                            @for (int j = 0; j < rows_per_page.Length; j++)
                            {
                                @if (rows_per_page[j] == page_size)
                                {
                                    <option value="@rows_per_page[j]" selected>@rows_per_page[j]</option>
                                }
                                else
                                {
                                    <option value="@rows_per_page[j]">@rows_per_page[j]</option>
                                }
                            }
                        </select>
                        <input type="hidden" name="page" value="@current_page" />
                        <input type="hidden" name="searchString" value="@searchString" />
                    </div>
                </div>
            </div>
            <div class="col-md-4 offset-md-6">
                <div class="card-tools">
                    <div class="input-group rounded mt-1 mb-1">
                        <input type="search" class="form-control rounded" placeholder="Search"
                               name="searchString" value="@searchString" id="searchInput" aria-label="Search"
                               aria-describedby="search-addon" />
                        <span class="input-group-text border-0" id="search-addon">
                            <i class="fas fa-search"></i>
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="card-body p-0">
        <table class="table table-striped projects" id="issueTable">
            <thead>
                <tr>
                    <th style="width: 5%">
                        #SL

                    </th>
                    <th style="width: 10%">
                        TNumber
                        @if (ViewBag.CurrentSortField == "TNumber")
                        {
                            @if (ViewBag.CurrentSortAscending)
                            {

                                <a asp-action="UnassignedTicketList" asp-route-rowperpage="@page_size"
                                   asp-route-searchString="@searchString"
                                   asp-route-sortField="TNumber" asp-route-sortAscending="false">
                                    <i class="fas fa-sort-up"></i>
                                </a>

                            }
                            else
                            {

                                <a asp-action="UnassignedTicketList" asp-route-rowperpage="@page_size"
                                   asp-route-searchString="@searchString"
                                   asp-route-sortField="TNumber" asp-route-sortAscending="true">
                                    <i class="fas fa-sort-down"></i>
                                </a>

                            }
                        }
                        else
                        {

                            <a asp-action="UnassignedTicketList" asp-route-rowperpage="@page_size"
                               asp-route-searchString="@searchString"
                               asp-route-sortField="TNumber" asp-route-sortAscending="true">
                                <i class="fas fa-sort-up"></i>
                            </a>

                        }
                    </th>


                    <th style="width: 20%">
                        Tickets
                        @if (ViewBag.CurrentSortField == "Tickets")
                        {
                            @if (ViewBag.CurrentSortAscending)
                            {

                                <a asp-action="UnassignedTicketList" asp-route-rowperpage="@page_size"
                                   asp-route-searchString="@searchString"
                                   asp-route-sortField="Tickets" asp-route-sortAscending="false">
                                    <i class="fas fa-sort-up"></i>
                                </a>

                            }
                            else
                            {

                                <a asp-action="UnassignedTicketList" asp-route-rowperpage="@page_size"
                                   asp-route-searchString="@searchString"
                                   asp-route-sortField="Tickets" asp-route-sortAscending="true">
                                    <i class="fas fa-sort-down"></i>
                                </a>

                            }
                        }
                        else
                        {

                            <a asp-action="UnassignedTicketList" asp-route-rowperpage="@page_size"
                               asp-route-searchString="@searchString"
                               asp-route-sortField="Tickets" asp-route-sortAscending="true">
                                <i class="fas fa-sort-up"></i>
                            </a>

                        }
                    </th>

                    <th style="width: 20%">
                        Approval Status
                        @if (ViewBag.CurrentSortField == "Approval Status")
                        {
                            @if (ViewBag.CurrentSortAscending)
                            {

                                <a asp-action="UnassignedTicketList" asp-route-rowperpage="@page_size"
                                   asp-route-searchString="@searchString"
                                   asp-route-sortField="Approval Status" asp-route-sortAscending="false">
                                    <i class="fas fa-sort-up"></i>
                                </a>

                            }
                            else
                            {

                                <a asp-action="UnassignedTicketList" asp-route-rowperpage="@page_size"
                                   asp-route-searchString="@searchString"
                                   asp-route-sortField="Approval Status" asp-route-sortAscending="true">
                                    <i class="fas fa-sort-down"></i>
                                </a>

                            }
                        }
                        else
                        {

                            <a asp-action="UnassignedTicketList" asp-route-rowperpage="@page_size"
                               asp-route-searchString="@searchString"
                               asp-route-sortField="Approval Status" asp-route-sortAscending="true">
                                <i class="fas fa-sort-up"></i>
                            </a>

                        }
                    </th>

                    <th style="width: 10%">
                        Priority
                        @if (ViewBag.CurrentSortField == "Priority")
                        {
                            @if (ViewBag.CurrentSortAscending)
                            {

                                <a asp-action="UnassignedTicketList" asp-route-rowperpage="@page_size"
                                   asp-route-searchString="@searchString"
                                   asp-route-sortField="Priority" asp-route-sortAscending="false">
                                    <i class="fas fa-sort-up"></i>
                                </a>

                            }
                            else
                            {

                                <a asp-action="UnassignedTicketList" asp-route-rowperpage="@page_size"
                                   asp-route-searchString="@searchString"
                                   asp-route-sortField="Priority" asp-route-sortAscending="true">
                                    <i class="fas fa-sort-down"></i>
                                </a>

                            }
                        }
                        else
                        {

                            <a asp-action="UnassignedTicketList" asp-route-rowperpage="@page_size"
                               asp-route-searchString="@searchString"
                               asp-route-sortField="Priority" asp-route-sortAscending="true">
                                <i class="fas fa-sort-up"></i>
                            </a>

                        }
                    </th>

                    <th style="width: 10%">
                        Status
                        @if (ViewBag.CurrentSortField == "Status")
                        {
                            @if (ViewBag.CurrentSortAscending)
                            {

                                <a asp-action="UnassignedTicketList" asp-route-rowperpage="@page_size"
                                   asp-route-searchString="@searchString"
                                   asp-route-sortField="Status" asp-route-sortAscending="false">
                                    <i class="fas fa-sort-up"></i>
                                </a>

                            }
                            else
                            {

                                <a asp-action="UnassignedTicketList" asp-route-rowperpage="@page_size"
                                   asp-route-searchString="@searchString"
                                   asp-route-sortField="Status" asp-route-sortAscending="true">
                                    <i class="fas fa-sort-down"></i>
                                </a>

                            }
                        }
                        else
                        {

                            <a asp-action="UnassignedTicketList" asp-route-rowperpage="@page_size"
                               asp-route-searchString="@searchString"
                               asp-route-sortField="Status" asp-route-sortAscending="true">
                                <i class="fas fa-sort-up"></i>
                            </a>

                        }
                    </th>

                    <th style="width: 15%">Modify</th>

                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@i</td>
                        <td>@Html.DisplayFor(modelItem => item.TNumber)</td>
                        <td>
                            <a>
                                <b>@Html.DisplayFor(modelItem => item.ITitle)</b>
                            </a>
                            <br />
                            <small>
                                <b>Created on:</b> @Html.DisplayFor(modelItem => item.TDate)

                            </small>
                        </td>

                        <td>

                            @if (item.AssignBy != null)
                            {
                                <small>
                                    <b>Assigned on:</b> @Html.DisplayFor(modelItem => item.AssignOn)
                                    <br><b>Assigned by:</b> @Html.DisplayFor(modelItem => item.AssignBy)
                                </small>
                            }
                            else
                            {
                                <b class="blinking-text" style="color: red; visibility: visible;">
                                    Unassigned
                                </b>
                            }
                        </td>
                        <td>
                            @{
                                var priorityClass = "";
                                switch (item.Priority)
                                {
                                    case "High":
                                        priorityClass = "text-danger";
                                        break;
                                    case "Medium":
                                        priorityClass = "text-warning";
                                        break;
                                    case "Low":
                                        priorityClass = "text-success";
                                        break;
                                    default:
                                        priorityClass = "";
                                        break;
                                }
                            }


                            <span class="@priorityClass">@Html.DisplayFor(modelItem => item.Priority)</span>

                        </td>

                        <td class="project-state">

                            @{
                                var badgeClass = "";
                                switch (item.IStatus)
                                {
                                    case "Close":
                                        badgeClass = "badge-success";
                                        break;
                                    case "Open":
                                        badgeClass = "badge-info";
                                        break;
                                    case "Inqueue":
                                        badgeClass = "badge-warning";
                                        break;
                                    default:
                                        badgeClass = "badge-secondary";
                                        break;
                                }
                            }
                            <span class="badge @badgeClass" data-status="@item.IStatus">
                                @Html.DisplayFor(modelItem => item.IStatus)
                            </span>
                        </td>

                        <td class="project-actions text-right">
                            <a class="btn btn-outline-primary btn-sm" asp-action="TicketView" asp-route-id="@item.IssueId">
                                <i class="fas fa-folder">
                                </i>
                                View
                            </a>
                            @if (@item.IStatus != "Close")
                            {
                                <a class="btn btn-outline-info btn-sm" asp-action="EditTicket" asp-route-id="@item.IssueId">
                                    <i class="fas fa-pencil-alt">
                                    </i>
                                    Edit
                                </a>
                            }
                        </td>
                    </tr>

                    i++;
                    end = i - 1;

                }

            </tbody>

        </table>
        <div id="paginationRow">
            <div class="row">
                <div class="col-md-4 pagination-container">
                    <span>Sowing @start to @end form @ViewBag.pager.TotalRecord items</span>
                </div>
                <div class="col-md-2">
                </div>
                <div class="col-md-6  ">
                    @* <partial name="_Paging" model="@ViewBag.pager"></partial> *@
                    @if (ViewBag.pager != null)
                    {
                        <ul class="pagination">
                            <li class="page-item">
                                <a class="page-link" asp-action="UnassignedTicketList" asp-controller="Maker" asp-route-page="1"
                                   asp-route-rowperpage="@ViewBag.pager.PageSize"
                                   asp-route-searchString="@ViewBag.pager.SearchString"> First</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" asp-action="UnassignedTicketList" asp-controller="Maker" asp-route-page="@ViewBag.pager.Previous"
                                   asp-route-rowperpage="@ViewBag.pager.PageSize"
                                   asp-route-searchString="@ViewBag.pager.SearchString">Previous</a>
                            </li>

                            @for (int k = @ViewBag.pager.StartButton; k <= @ViewBag.pager.StopButton; k++)
                            {
                                @if (k == @ViewBag.pager.CurrentPage)
                                {
                                    <li class="page-item">
                                        <a class="btn btn-warning" asp-action="UnassignedTicketList" asp-controller="Maker" asp-route-page="1"
                                           asp-route-rowperpage="@ViewBag.pager.PageSize"
                                           asp-route-searchString="@ViewBag.pager.SearchString">@k</a>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item">
                                        <a class="page-link" asp-action="UnassignedTicketList" asp-controller="Maker" asp-route-page="@k"
                                           asp-route-rowperpage="@ViewBag.pager.PageSize"
                                           asp-route-searchString="@ViewBag.pager.SearchString">@k</a>
                                    </li>
                                }

                            }

                            <li class="page-item">
                                <a class="page-link" asp-action="UnassignedTicketList" asp-controller="Maker" asp-route-page="@ViewBag.pager.Next"
                                   asp-route-rowperpage="@ViewBag.pager.PageSize"
                                   asp-route-searchString="@ViewBag.pager.SearchString">Next</a>
                            </li>

                            <li class="page-item">
                                <a class="page-link" asp-action="UnassignedTicketList" asp-controller="Maker" asp-route-page="@ViewBag.pager.LastPage"
                                   asp-route-rowperpage="@ViewBag.pager.PageSize"
                                   asp-route-searchString="@ViewBag.pager.SearchString"> Last</a>
                            </li>

                        </ul>
                    }
                </div>

            </div>
        </div>
    </div>
    <!-- /.card-body -->
    <!-- /.card -->

</section>



@section Scripts{

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script>
        $(document).ready(function () {
            // Search input and Row per page select change event listener
            $("#searchInput, #rowsPerPageSelect").on('input change', function () {
                triggerPagination();
            });

            // Function to trigger pagination
            function triggerPagination() {
                var searchString = $("#searchInput").val();
                var currentPage = @current_page; // Assuming this variable is accessible in JavaScript
                var rowPerPage = $("#rowsPerPageSelect").val();
                var url = '@Url.Action("UnassignedTicketList", "Maker")' + '?page=' + currentPage + '&rowperpage=' + rowPerPage + '&searchString=' + encodeURIComponent(searchString);

                $.ajax({
                    url: url,
                    type: 'GET',
                    // success: function (data) {
                    //     $('#employeeTable').html($(data).find('#employeeTable').html()); // Replace table content
                    //     $('.pagination-container').html($(data).find('.pagination-container').html()); // Replace pagination content
                    // },
                    success: function (data) {
                        $('#issueTable').html($(data).find('#issueTable').html()); // Replace table content
                        /* $('.pagination-container').html($(data).find('.pagination-container').html()); */ // Replace pagination container content
                        $('#paginationRow').html($(data).find('#paginationRow').html());
                    },

                    error: function (xhr, textStatus, errorThrown) {
                        console.error("Error occurred:", errorThrown);
                    }
                });
            }
        });
    </script>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var blinkingElements = document.querySelectorAll('.blinking-text');

            blinkingElements.forEach(function (element) {
                setInterval(function () {
                    element.style.visibility = (element.style.visibility === 'hidden') ? 'visible' : 'hidden';
                }, 800); // Toggle visibility every 1000 milliseconds (1 second)
            });
        });
    </script>

}











