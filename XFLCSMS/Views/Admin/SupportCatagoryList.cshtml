@model IEnumerable<XFLCSMS.Models.Support.SupportCatagory>

    <!-- Main content -->
    <section class="content">

        <!-- Default box -->
        <div class="card">
            <div class="card-header">

            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <h4>Support Caragory List</h4>
                    </div>
                    <div class="col-md-6 text-right">
                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                            <button type="button" class="btn btn-tool" data-card-widget="remove" title="Remove">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            </div>
            <div class="card-body">
                <a class="btn btn-outline-success" asp-controller="Admin" asp-action="CreateSupportCatagory">
                    <i class="fas fa-plus"></i> Create
                </a>
            </div>
            <div class="card-body p-0">
                <table class="table table-striped projects" id="issuesTable">
                    <thead>
                        <tr>
                            <th style="width:10%">
                                SupportCatagoryId
                            </th>
                            <th style="width: 30%">
                                SupportCatagoryName
                            </th>

                            <th style="width: 30%; text-align: center;">
                                Modify
                            </th>


                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model)
                        {


                            <tr id="row-@item.SupportCatagoryId">
                                <!-- Your table cells -->
                                <td>@Html.DisplayFor(modelItem => @item.SupportCatagoryId)</td>
                                <td>@Html.DisplayFor(modelItem => item.SCatagory)</td>

                                <td class="project-actions text-right">
                                    <a class="btn btn-outline-primary btn-sm" asp-controller="Admin" asp-action="ViewSupportCatagory" asp-route-id="@item.SupportCatagoryId">
                                        <i class="fas fa-folder"></i> View
                                    </a>
                                    <a class="btn btn-outline-info btn-sm" asp-controller="Admin" asp-action="EditSupportCatagory" asp-route-id="@item.SupportCatagoryId">
                                        <i class="fas fa-pencil-alt"></i> Edit
                                    </a>
                                    <a class="btn btn-outline-danger btn-sm" href="#" data-issue-id="@item.SupportCatagoryId">
                                        <i class="fas fa-trash-alt"></i>
                                        Delete
                                    </a>
                                </td>
                            </tr>
                            <!-- Additional rows go here -->
                        }


                    </tbody>
                </table>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->

    </section>
    <!-- /.content -->
      

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <!-- Your JavaScript/jQuery code -->
    <script>
    document.querySelectorAll('.btn-outline-danger').forEach(function (button) {
            button.addEventListener('click', function (event) {
                event.preventDefault();

                var issueId = this.getAttribute('data-issue-id');
                var rowToDelete = this.closest('tr');

                // Show confirmation dialog
                var isConfirmed = confirm('Are you sure you want to delete this item?');

                if (isConfirmed) {
                    // Perform the DELETE request using JavaScript
                    fetch(`/Admin/DeleteSupportCatagory/${issueId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                            // Add any additional headers as needed, e.g., for CSRF protection
                        }
                    })
                        .then(response => {
                            if (response.ok) {
                                // Remove the deleted row from the table
                                rowToDelete.remove();
                            } else {
                                // Handle errors, e.g., show an error message
                                console.error('Error:', response.statusText);
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                        });
                }
            });
        });
    </script>

<script type="text/javascript">
    // Define a function named preventback
    function preventback() {
        // Forward the browser's history by one step, effectively preventing the user from going back
        window.history.forward();
    }

    // Set a timeout to call the preventback function immediately after the script is executed
    setTimeout("preventback()", 0);

    // When the window loads, assign a null function to the onload event to effectively do nothing
    window.onload = function () { null };
</script>