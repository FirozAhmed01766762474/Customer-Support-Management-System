@model XFLCSMS.Models.Register.Password;

@{
    // ViewData["Title"] = "Register";
    Layout = null;

}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>XFL CSMS | Change Password</title>

    <!-- Google Font: Source Sans Pro -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="~/plugins/fontawesome-free/css/all.min.css">
    <!-- icheck bootstrap -->
    <link rel="stylesheet" href="~/plugins/icheck-bootstrap/icheck-bootstrap.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="~/dist/css/adminlte.min.css">
</head>

<body class="hold-transition login-page" oncontextmenu="return null">
    <div class="login-box">
        <div class="card card-outline card-primary">
            <div class="card-header text-center">
                <a href="../../index2.html" class="h1"><b>XFL</b>CSMS</a>
            </div>

            <div class="card-body">
                <p class="login-box-msg">You are only one step a way from Changing your password.</p>
                <form asp-action="ChangePassword" method="post">
                    <div class="card">
                        <div class="card-body login-card-body">
                            <input asp-for="@Model.UserId" type="hidden" name="UserId"  />
                            <div class="input-group mb-3" >
                                <input asp-for="@Model.CurrentPassword" type="password" class="form-control" id="password" name="CurrentPassword" aria-describedby="passwordToggle" placeholder="Old Password">
                                <button class="btn btn-outline-secondary" type="button" id="passwordToggle" onclick="togglePassword()">Show</button>
                            </div>
                            <div class="input-group mb-3">
                                <input asp-for="@Model.NewPassword" type="password"  class="form-control" id="Newpassword" name="NewPassword" aria-describedby="NewpasswordToggle" placeholder="New Password">
                                <button class="btn btn-outline-secondary" type="button" id="passwordToggle" onclick="toggleNewPassword()">Show</button>
                            </div>
                            <div class="input-group mb-3">
                                <input asp-for = "@Model.ConNewPassword"  type="password"  class="form-control" id="Confirmpassword" name="ConNewPassword" aria-describedby="ConfirmpasswordToggle" placeholder="Confirm New Password">
                                <button class="btn btn-outline-secondary" type="button" id="ConfirmpasswordToggle" onclick="toggleNewPassword() ">Show</button>
                            </div>

                            <div class="row">
                                <div class="col-12">
                                    <button type="submit" class="btn btn-outline-primary btn-block">Change password</button>
                                </div>
                                <!-- /.col -->
                            </div>
                        </div>
                   </div>
                </form>
                @if (ViewBag.message != null)
                {
                    <div class="card">
                        <p class="text-danger text-xl-center">@ViewBag.message</p>
                    </div>
                }
            </div>
            <!-- /.login-card-body -->
        </div>
    </div>
    
    <!-- /.login-box -->
    <script>
        function togglePassword() {
        const passwordInput = document.getElementById('password');
        const passwordToggle = document.getElementById('passwordToggle');

        if (passwordInput.type === 'password') {
        passwordInput.type = 'text';
        passwordToggle.textContent = 'Hide';
        } else {
        passwordInput.type = 'password';
        passwordToggle.textContent= 'Show';
        }
        }
    </script>

    <!-- New Password -->
    <script>
        function toggleNewPassword() {
        const passwordInput = document.getElementById('Newpassword');
        const passwordToggle = document.getElementById('NewpasswordToggle');

        if (passwordInput.type === 'password') {
        passwordInput.type = 'text';
        passwordToggle.textContent = 'Hide';
        } else {
        passwordInput.type = 'password';
        passwordToggle.textContent= 'Show';
        }
        }
    </script>
    <!-- Confirm Password -->
    <script>
        function ConfirmtogglePassword() {
        const passwordInput = document.getElementById('Confirmpassword');
        const passwordToggle = document.getElementById('ConfirmpasswordToggle');

        if (passwordInput.type === 'password') {
        passwordInput.type = 'text';
        passwordToggle.textContent = 'Hide';
        } else {
        passwordInput.type = 'password';
        passwordToggle.textContent= 'Show';
        }
        }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- jQuery -->
    <script src="~/plugins/jquery/jquery.min.js"></script>
    <!-- Bootstrap 4 -->
    <script src="~/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- AdminLTE App -->
    <script src="~/dist/js/adminlte.min.js"></script>

    <script>
        document.onkeydown = function (e) {
            if (event.keyCode == 123) {
                return false;
            }
            if (e.ctrlKey && e.shiftKey && e.keyCode == 'I'.charCodeAt(0)) {
                return false;
            }
            if (e.ctrlKey && e.shiftKey && e.keyCode == 'J'.charCodeAt(0)) {
                return false;
            }
            if (e.ctrlKey && e.keyCode == 'U'.charCodeAt(0)) {
                return false;
            }


        }
    </script>
    <script type="text/javascript">
        // Define a function named preventback
        function preventback() {
            // Forward the browser's history by one step, effectively preventing the user from going back
            window.history.forward();
        }

        // Set a timeout to call the preventback function immediately after the script is executed
        setTimeout("preventback()", 0);

        // When the window loads, assign a null function to the onload event to effectively do nothing
        window.onload = function () { null };
    </script>
</body>
</html>
